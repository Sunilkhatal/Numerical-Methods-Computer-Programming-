1) Gauss Elimination Method using Python  
import numpy as np 
import sys 
n = int(input('Enter number of unknowns: ')) 
a = np.zeros((n,n+1))   
x = np.zeros(n) 
print('Enter Augmented Matrix Coefficients:') 
for i in range(n):
    for j in range(n+1): 
        a[i][j] = float(input( 'a['+str(i)+']['+ str(j)+']='))  
for i in range(n): 
    if a[i][i] == 0.0: 
        sys.exit('Divide by zero detected!') 
    for j in range(i+1, n): 
        ratio = a[j][i]/a[i][i] 
        for k in range(n+1): 
            a[j][k] = a[j][k] - ratio * a[i][k]  
x[n-1] = a[n-1][n]/a[n-1][n-1] 
for i in range(n-2,-1,-1): 
    x[i] = a[i][n] 
    for j in range(i+1,n): 
        x[i] = x[i] - a[i][j]*x[j]  
    x[i] = x[i]/a[i][i] 
 
print('\nRequired solution is: ') 
for i in range(n):
    print('X%d = %0.2f' %(i,x[i]), end = '\t')

OUTPUT:-
Enter number of unknowns: 3
Enter Augmented Matrix Coefficients:
a[0][0]=2
a[0][1]=4
a[0][2]=-6
a[0][3]=-4
a[1][0]=1
a[1][1]=5
a[1][2]=3
a[1][3]=10
a[2][0]=1
a[2][1]=3
a[2][2]=2
a[2][3]=5

Required solution is: 
X0 = -3.00	X1 = 2.00	X2 = 1.00	